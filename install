#!/bin/bash

set -eu

here="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

## Bring in some helper functions
source $here/util

## Sanity-check
log_start "Checking environment... "
check_existence "mount"
check_existence "modprobe"
check_existence "chroot"
check_existence "curl"
check_existence "sed"
check_existence "grep"
#check_existence "unsquashfs"
log_end "seems sane"

## Setup essential variables; allow overriding with input
root_mount=$(mount | grep "/ " | sed 's/ /\n/' | head -n1)
root_type=$(mount | grep -Eo "/ type \w+" | sed 's/ /\n/g' | tail -n1)
grub_device=$(echo $root_mount | sed "s|[0-9]\+||")
iso=latest-iso-minimal-x86_64-linux
working_directory=$(mktemp -d)

while getopts ":g:r:t:Gw:h" opt; do
  case $opt in
    g)
      grub_device=$OPTARG
      ;;
    r)
      root_mount=$OPTARG
      ;;
    t)
      root_type=$OPTARG
      ;;
    G)
      iso=latest-iso-graphical-x86_64-linux
      ;;
    w)
      working_directory=$OPTARG
      ;;
    h)
      show_help $0
      ;;
    \?)
      log "ERROR invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      log "ERROR option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

## Give one last chance to back out
log "NixOS installer (nixos-in-place)"
log "   GRUB => $grub_device"
log "   Root => $root_mount ($root_type)"
log "   ISO => $iso"
log_start "Continue? [yn] "
read -n 1 -r
log_end
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
  log "Exiting; nothing was harmed"
  exit 1
fi

pushd $working_directory
  log "Downloading NixOS $iso"
  mkdir -p mnt host/nix
  curl -# http://nixos.org/releases/nixos/$iso

  log "Extracting ISO"
  modprobe loop
  mount -o loop $iso mnt
  unsquashfs -d host/nix/store mnt/nix-store.squashfs '*'

  ## Save one space
  rm -f $iso

  ## Setup the chroot environment before install
  log "Embarking stage1!"
  $here/stage1 $here $root_mount $root_type $grub_device

  ## TODO: Clean up mounts
  log "Cleaning up mounts"
popd

## Installation is complete
log_start "Reboot into NixOS now? [yn] "
read -n 1 -r
log_end
[[ $REPLY =~ ^[Yy]$ ]] && reboot
